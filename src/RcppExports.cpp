// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppBlaze.h>
#include <Rcpp.h>

using namespace Rcpp;

// std_rcpp
double std_rcpp(NumericVector data, bool na_rm);
RcppExport SEXP _tsmp_std_rcpp(SEXP dataSEXP, SEXP na_rmSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type data(dataSEXP);
    Rcpp::traits::input_parameter< bool >::type na_rm(na_rmSEXP);
    rcpp_result_gen = Rcpp::wrap(std_rcpp(data, na_rm));
    return rcpp_result_gen;
END_RCPP
}
// diff_lag
NumericVector diff_lag(NumericVector x, uint32_t lag);
RcppExport SEXP _tsmp_diff_lag(SEXP xSEXP, SEXP lagSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< uint32_t >::type lag(lagSEXP);
    rcpp_result_gen = Rcpp::wrap(diff_lag(x, lag));
    return rcpp_result_gen;
END_RCPP
}
// diff2_lag
NumericVector diff2_lag(NumericVector x, uint32_t lag, double v);
RcppExport SEXP _tsmp_diff2_lag(SEXP xSEXP, SEXP lagSEXP, SEXP vSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< uint32_t >::type lag(lagSEXP);
    Rcpp::traits::input_parameter< double >::type v(vSEXP);
    rcpp_result_gen = Rcpp::wrap(diff2_lag(x, lag, v));
    return rcpp_result_gen;
END_RCPP
}
// fast_movsd_rcpp
NumericVector fast_movsd_rcpp(NumericVector data, uint32_t window_size);
RcppExport SEXP _tsmp_fast_movsd_rcpp(SEXP dataSEXP, SEXP window_sizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type data(dataSEXP);
    Rcpp::traits::input_parameter< uint32_t >::type window_size(window_sizeSEXP);
    rcpp_result_gen = Rcpp::wrap(fast_movsd_rcpp(data, window_size));
    return rcpp_result_gen;
END_RCPP
}
// fast2_movsd_rcpp
NumericVector fast2_movsd_rcpp(NumericVector data, uint32_t window_size);
RcppExport SEXP _tsmp_fast2_movsd_rcpp(SEXP dataSEXP, SEXP window_sizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type data(dataSEXP);
    Rcpp::traits::input_parameter< uint32_t >::type window_size(window_sizeSEXP);
    rcpp_result_gen = Rcpp::wrap(fast2_movsd_rcpp(data, window_size));
    return rcpp_result_gen;
END_RCPP
}
// fast_avg_sd_rcpp
List fast_avg_sd_rcpp(NumericVector data, uint32_t window_size);
RcppExport SEXP _tsmp_fast_avg_sd_rcpp(SEXP dataSEXP, SEXP window_sizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type data(dataSEXP);
    Rcpp::traits::input_parameter< uint32_t >::type window_size(window_sizeSEXP);
    rcpp_result_gen = Rcpp::wrap(fast_avg_sd_rcpp(data, window_size));
    return rcpp_result_gen;
END_RCPP
}
// vecmin
int vecmin(IntegerVector x);
RcppExport SEXP _tsmp_vecmin(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(vecmin(x));
    return rcpp_result_gen;
END_RCPP
}
// vecmax
int vecmax(IntegerVector x);
RcppExport SEXP _tsmp_vecmax(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(vecmax(x));
    return rcpp_result_gen;
END_RCPP
}
// mode_rcpp
int32_t mode_rcpp(NumericVector x);
RcppExport SEXP _tsmp_mode_rcpp(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(mode_rcpp(x));
    return rcpp_result_gen;
END_RCPP
}
// znorm_rcpp
NumericVector znorm_rcpp(NumericVector data);
RcppExport SEXP _tsmp_znorm_rcpp(SEXP dataSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type data(dataSEXP);
    rcpp_result_gen = Rcpp::wrap(znorm_rcpp(data));
    return rcpp_result_gen;
END_RCPP
}
// binary_split_rcpp
NumericVector binary_split_rcpp(uint32_t n);
RcppExport SEXP _tsmp_binary_split_rcpp(SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< uint32_t >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(binary_split_rcpp(n));
    return rcpp_result_gen;
END_RCPP
}
// sq2s_rcpp
double sq2s_rcpp(NumericVector a);
RcppExport SEXP _tsmp_sq2s_rcpp(SEXP aSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type a(aSEXP);
    rcpp_result_gen = Rcpp::wrap(sq2s_rcpp(a));
    return rcpp_result_gen;
END_RCPP
}
// sum2s_rcpp
NumericVector sum2s_rcpp(NumericVector a, uint32_t w);
RcppExport SEXP _tsmp_sum2s_rcpp(SEXP aSEXP, SEXP wSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type a(aSEXP);
    Rcpp::traits::input_parameter< uint32_t >::type w(wSEXP);
    rcpp_result_gen = Rcpp::wrap(sum2s_rcpp(a, w));
    return rcpp_result_gen;
END_RCPP
}
// muinvn_rcpp
List muinvn_rcpp(NumericVector a, uint32_t w);
RcppExport SEXP _tsmp_muinvn_rcpp(SEXP aSEXP, SEXP wSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type a(aSEXP);
    Rcpp::traits::input_parameter< uint32_t >::type w(wSEXP);
    rcpp_result_gen = Rcpp::wrap(muinvn_rcpp(a, w));
    return rcpp_result_gen;
END_RCPP
}
// sum2s2_rcpp
NumericVector sum2s2_rcpp(NumericVector a, uint32_t w);
RcppExport SEXP _tsmp_sum2s2_rcpp(SEXP aSEXP, SEXP wSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type a(aSEXP);
    Rcpp::traits::input_parameter< uint32_t >::type w(wSEXP);
    rcpp_result_gen = Rcpp::wrap(sum2s2_rcpp(a, w));
    return rcpp_result_gen;
END_RCPP
}
// muinvn2_rcpp
List muinvn2_rcpp(NumericVector a, uint32_t w);
RcppExport SEXP _tsmp_muinvn2_rcpp(SEXP aSEXP, SEXP wSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type a(aSEXP);
    Rcpp::traits::input_parameter< uint32_t >::type w(wSEXP);
    rcpp_result_gen = Rcpp::wrap(muinvn2_rcpp(a, w));
    return rcpp_result_gen;
END_RCPP
}
// mpx_rcpp
List mpx_rcpp(NumericVector a, uint32_t w, uint32_t minlag);
RcppExport SEXP _tsmp_mpx_rcpp(SEXP aSEXP, SEXP wSEXP, SEXP minlagSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type a(aSEXP);
    Rcpp::traits::input_parameter< uint32_t >::type w(wSEXP);
    Rcpp::traits::input_parameter< uint32_t >::type minlag(minlagSEXP);
    rcpp_result_gen = Rcpp::wrap(mpx_rcpp(a, w, minlag));
    return rcpp_result_gen;
END_RCPP
}
// movmin
NumericVector movmin(NumericVector data, uint32_t window_size);
RcppExport SEXP _tsmp_movmin(SEXP dataSEXP, SEXP window_sizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type data(dataSEXP);
    Rcpp::traits::input_parameter< uint32_t >::type window_size(window_sizeSEXP);
    rcpp_result_gen = Rcpp::wrap(movmin(data, window_size));
    return rcpp_result_gen;
END_RCPP
}
// movmax
NumericVector movmax(NumericVector data, uint32_t window_size);
RcppExport SEXP _tsmp_movmax(SEXP dataSEXP, SEXP window_sizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type data(dataSEXP);
    Rcpp::traits::input_parameter< uint32_t >::type window_size(window_sizeSEXP);
    rcpp_result_gen = Rcpp::wrap(movmax(data, window_size));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_tsmp_std_rcpp", (DL_FUNC) &_tsmp_std_rcpp, 2},
    {"_tsmp_diff_lag", (DL_FUNC) &_tsmp_diff_lag, 2},
    {"_tsmp_diff2_lag", (DL_FUNC) &_tsmp_diff2_lag, 3},
    {"_tsmp_fast_movsd_rcpp", (DL_FUNC) &_tsmp_fast_movsd_rcpp, 2},
    {"_tsmp_fast2_movsd_rcpp", (DL_FUNC) &_tsmp_fast2_movsd_rcpp, 2},
    {"_tsmp_fast_avg_sd_rcpp", (DL_FUNC) &_tsmp_fast_avg_sd_rcpp, 2},
    {"_tsmp_vecmin", (DL_FUNC) &_tsmp_vecmin, 1},
    {"_tsmp_vecmax", (DL_FUNC) &_tsmp_vecmax, 1},
    {"_tsmp_mode_rcpp", (DL_FUNC) &_tsmp_mode_rcpp, 1},
    {"_tsmp_znorm_rcpp", (DL_FUNC) &_tsmp_znorm_rcpp, 1},
    {"_tsmp_binary_split_rcpp", (DL_FUNC) &_tsmp_binary_split_rcpp, 1},
    {"_tsmp_sq2s_rcpp", (DL_FUNC) &_tsmp_sq2s_rcpp, 1},
    {"_tsmp_sum2s_rcpp", (DL_FUNC) &_tsmp_sum2s_rcpp, 2},
    {"_tsmp_muinvn_rcpp", (DL_FUNC) &_tsmp_muinvn_rcpp, 2},
    {"_tsmp_sum2s2_rcpp", (DL_FUNC) &_tsmp_sum2s2_rcpp, 2},
    {"_tsmp_muinvn2_rcpp", (DL_FUNC) &_tsmp_muinvn2_rcpp, 2},
    {"_tsmp_mpx_rcpp", (DL_FUNC) &_tsmp_mpx_rcpp, 3},
    {"_tsmp_movmin", (DL_FUNC) &_tsmp_movmin, 2},
    {"_tsmp_movmax", (DL_FUNC) &_tsmp_movmax, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_tsmp(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
